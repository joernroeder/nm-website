// Generated by CoffeeScript 1.6.2
"use strict";(function($) {
  var editorTypes, openPopovers;

  editorTypes = ['markdown', 'date', 'inline'];
  openPopovers = {};
  return $('[contenteditable="true"],[data-editor-type]').each(function(i, el) {
    var $el, api, close, elType, getContent, getType, hideOpen, open, toggle, _type;

    hideOpen = function() {
      return $.map(openPopovers, function(api, id) {
        api.hide();
        return delete openPopovers[api._id];
      });
    };
    open = function() {
      hideOpen();
      api.show();
      return openPopovers[api._id] = api;
    };
    close = function() {
      api.hide();
      return delete openPopovers[api._id];
    };
    toggle = function() {
      if (api.tooltip && $(api.tooltip).hasClass('qtip-focus')) {
        return close();
      } else {
        return open();
      }
    };
    getContent = function() {
      return "<h1>" + elType + " Editor</h1>";
    };
    _type = '';
    getType = function() {
      if (_type) {
        return _type;
      }
      return _type = $el.attr('contenteditable') ? 'inline' : $el.data('editor-type');
    };
    $el = $(el);
    elType = getType();
    if (-1 === $.inArray(elType, editorTypes)) {
      return;
    }
    $el.qtip({
      content: {
        text: getContent(),
        title: ''
      },
      position: {
        at: 'right center',
        my: 'left center',
        adjust: {
          x: 10,
          resize: true
        }
      },
      show: {
        event: false
      },
      hide: {
        event: false,
        fixed: true
      },
      style: {
        classes: 'editor-popover',
        tip: {
          width: 20,
          height: 10
        }
      }
    });
    api = $el.qtip('api');
    return $el.on('click', function() {
      if (getType() === 'inline') {
        return hideOpen();
      } else {
        return toggle();
      }
    });
  });
})(jQuery);
