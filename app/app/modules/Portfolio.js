// Generated by CoffeeScript 1.6.2
define(['app', 'modules/Gravity'], function(app, Gravity) {
  var Portfolio;

  Portfolio = app.module();
  Portfolio.Views.GravityContainer = Gravity.Views.Container.extend({
    tagName: 'ul',
    className: 'gravity',
    beforeRender: function() {
      var model, modelArray, _i, _len, _results;

      console.log('portfolio before render');
      modelArray = this.collection;
      if (modelArray) {
        _results = [];
        for (_i = 0, _len = modelArray.length; _i < _len; _i++) {
          model = modelArray[_i];
          _results.push(this.insertView('', new Portfolio.Views.ListItem({
            model: model,
            linkTo: this.options.linkTo
          })));
        }
        return _results;
      }
    }
  });
  Portfolio.Views.ListItem = Backbone.View.extend({
    tagName: 'li',
    className: 'gravity-item',
    template: 'gravity-list-item',
    serialize: function() {
      var data;

      data = this.model ? this.model.toJSON() : {};
      data.LinkTo = this.options.linkTo;
      return data;
    }
  });
  Portfolio.Views.Detail = Backbone.View.extend({
    tagName: 'section',
    className: 'portfolio-detail',
    template: 'portfolio-detail',
    serialize: function() {
      if (this.model) {
        return this.model.toJSON();
      } else {
        return {};
      }
    }
  });
  return Portfolio;
});
