// Generated by CoffeeScript 1.6.2
define(['app', 'modules/Gravity'], function(app, Gravity) {
  var Portfolio;

  Portfolio = app.module();
  Portfolio.Config = {
    person_group_length: 4
  };
  Portfolio.Views.GravityContainer = Gravity.Views.Container.extend({
    tagName: 'section',
    beforeRender: function() {
      var model, modelArray, _i, _len, _results;

      console.log('portfolio before render');
      modelArray = this.collection;
      if (modelArray) {
        _results = [];
        for (_i = 0, _len = modelArray.length; _i < _len; _i++) {
          model = modelArray[_i];
          _results.push(this.insertView('', new Portfolio.Views.ListItem({
            model: model,
            linkTo: this.options.linkTo
          })));
        }
        return _results;
      }
    }
  });
  Portfolio.Views.ListItem = Backbone.View.extend({
    tagName: 'article',
    className: 'gravity-item',
    template: 'gravity-list-item',
    serialize: function() {
      var data;

      data = this.model ? this.model.toJSON() : {};
      data.LinkTo = this.options.linkTo;
      return data;
    }
  });
  Portfolio.Views.Detail = Backbone.View.extend({
    tagName: 'article',
    className: 'portfolio-detail',
    template: 'portfolio-detail',
    afterRender: function() {
      return window.picturefill();
    },
    serialize: function() {
      var json, types,
        _this = this;

      json = this.model ? this.model.toJSON() : {};
      types = ['Projects', 'ChildProjects', 'ParentProjects'];
      if (json.Persons.length > Portfolio.Config.person_group_length) {
        json.IsGroup = true;
      }
      json.combinedProjects = [];
      _.each(types, function(type) {
        if (_.isArray(json[type])) {
          return json.combinedProjects = json.combinedProjects.concat(json[type]);
        }
      });
      return json;
    }
  });
  Handlebars.registerHelper('nameSummary', function(persons, altText) {
    var length, out;

    out = '';
    length = persons.length;
    _.each(persons, function(person, i) {
      out += person.FirstName + ' ' + person.Surname;
      if (i < (length - 2)) {
        return out += ', ';
      } else if (i < (length - 1)) {
        return out += ' &amp; ';
      }
    });
    return out;
  });
  Handlebars.registerHelper('niceDate', function(model) {
    var out;

    if (!(model.DateRangeNice || model.FrontendDate)) {
      return false;
    }
    out = '';
    if (model.DateRangeNice) {
      out += model.DateRangeNice;
    } else if (model.FrontendDate) {
      out += model.FrontendDate;
    }
    return out;
  });
  Handlebars.registerHelper('portfoliolist', function(items, title, options) {
    var out;

    if (!options) {
      options = title;
      title = '';
    }
    title += items.length > 1 ? 's' : '';
    out = "<h4>" + title + "</h4>";
    out += '<ul>';
    console.log(items);
    _.each(items, function(item) {
      if (item.IsPortfolio) {
        return out += '<li><a href="/portfolio/' + item.UglyHash + '/">' + item.Title + '</a></li>';
      }
    });
    out += '</ul>';
    return out;
  });
  return Portfolio;
});
