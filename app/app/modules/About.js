// Generated by CoffeeScript 1.6.2
define(['app', 'modules/Gravity'], function(app, Gravity) {
  var About;

  About = app.module();
  About.Views.GravityContainer = Gravity.Views.Container.extend({
    tagName: 'section',
    template: 'about-gravity',
    initialize: function(options) {
      this.groupImage = options.groupImage;
      return this.persons = options.persons;
    },
    beforeRender: function() {
      var alumni, employee, student, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;

      if (this.persons) {
        _ref = this.persons.students;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          student = _ref[_i];
          this.insertView('#student-list', new About.Views.PersonListItem({
            model: student
          }));
        }
        _ref1 = this.persons.alumnis;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          alumni = _ref1[_j];
          this.insertView('#alumni-list', new About.Views.PersonListItem({
            model: alumni
          }));
        }
        _ref2 = this.persons.employees;
        _results = [];
        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
          employee = _ref2[_k];
          _results.push(this.insertView('', new About.Views.EmployeeItem({
            model: employee
          })));
        }
        return _results;
      }
    },
    serialize: function() {
      return {
        GroupImage: this.groupImage
      };
    }
  });
  About.Views.PersonListItem = Backbone.View.extend({
    tagName: 'li',
    className: 'person-list-item',
    template: 'person-list-item',
    serialize: function() {
      return this.model.toJSON();
    }
  });
  About.Views.EmployeeItem = Backbone.View.extend({
    tagName: 'section',
    className: 'person gravity-item',
    template: 'employee-item',
    serialize: function() {
      return this.model.toJSON();
    }
  });
  return About;
});
