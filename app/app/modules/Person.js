// Generated by CoffeeScript 1.6.3
define(['app', 'modules/JJPackery', 'modules/Portfolio'], function(app, JJPackery, Portfolio) {
  var Person;
  Person = app.module();
  JJRestApi.Modules.extend('Person', function(Person) {
    JJRestApi.extendModel('Person', {
      /**
      				 * @return {String} either 'student' or 'alumni' or 'employee'
      */

      getLinkingSlug: function() {
        if (this.get('IsEmployee')) {
          return 'employee';
        }
        if (this.get('IsStudent')) {
          return 'student';
        }
        if (this.get('IsAlumni')) {
          return 'alumni';
        }
        return '';
      },
      getFullName: function() {
        if (this.get('FullName')) {
          return this.get('FullName');
        }
        return (this.get('FirstName') ? this.get('FirstName') : '') + ' ' + (this.get('Surname') ? this.get('Surname') : '');
      }
    });
    return JJRestApi.extendCollection('Person', {
      comparator: function(person) {
        return person.get('Surname');
      }
    });
  });
  Person.Views.PackeryContainer = JJPackery.Views.Container.extend({
    beforeRender: function() {
      var model, modelArray, projectType, rel, rels, _i, _j, _k, _len, _len1, _len2, _ref, _results;
      console.log('render person page with normal view');
      modelArray = [];
      rels = this.model.relations;
      _ref = app.Config.ProjectTypes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        projectType = _ref[_i];
        for (_j = 0, _len1 = rels.length; _j < _len1; _j++) {
          rel = rels[_j];
          if (rel.collectionType === projectType) {
            modelArray = modelArray.concat(this.model.get(rel.key).models);
          }
        }
      }
      this.insertView('.packery', new Person.Views.InfoItem({
        model: this.model
      }));
      _results = [];
      for (_k = 0, _len2 = modelArray.length; _k < _len2; _k++) {
        model = modelArray[_k];
        if (model.get('IsPublished')) {
          _results.push(this.insertView('.packery', new Portfolio.Views.ListItem({
            model: model,
            linkTo: 'about/' + this.model.get('UrlSlug')
          })));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    }
  });
  Person.Views.InfoItem = Backbone.View.extend({
    tagName: 'article',
    className: 'packery-item person-info',
    template: 'person-info-item',
    events: {
      'click a.vcf-download': 'downloadVcf'
    },
    downloadVcf: function(e) {
      var uriContent, vcfContent;
      e.preventDefault();
      vcfContent = "BEGIN:VCARD\rVERSION:3.0\rCLASS:PUBLIC\rFN:" + (this.model.get('FirstName')) + " " + (this.model.get('Surname')) + "\rN:" + (this.model.get('Surname')) + ";" + (this.model.get('FirstName')) + " ;;;\r";
      if (this.model.get('Email')) {
        vcfContent += "EMAIL;TYPE=INTERNET:" + (this.model.get('Email')) + "\r";
      }
      if (this.model.get('Phone')) {
        vcfContent += "TEL;TYPE=PREF:" + (this.model.get('Phone')) + "\r";
      }
      vcfContent += "END:VCARD";
      uriContent = "data:text/vcard," + encodeURIComponent(vcfContent);
      window.location.href = uriContent;
      return false;
    },
    serialize: function() {
      if (this.model) {
        return this.model.toJSON();
      }
    }
  });
  Person.Views.Custom = Backbone.View.extend({
    tagName: 'div',
    className: 'custom-templ',
    initialize: function(options) {
      if (options.template) {
        return this.template = options.template;
      }
    },
    serialize: function() {
      if (this.model) {
        return this.model.toJSON();
      } else {
        return {};
      }
    },
    beforeRender: function() {
      return this._ev = $.Event('template:ready', {
        bubbles: false
      });
    },
    afterRender: function() {
      return $(document).trigger(this._ev);
    }
  });
  Handlebars.registerHelper('personMeta', function() {
    var addDate, out, stats;
    out = '';
    stats = [];
    addDate = false;
    if (this.IsStudent) {
      stats.push('Student');
    }
    if (this.IsAlumni) {
      stats.push('Alumni');
    }
    if (this.IsEmployee) {
      stats.push(this.JobTitle || Â ('Employee'));
    }
    if (this.IsExternal) {
      stats.push('External');
    }
    if (!stats.length) {
      return '';
    }
    out += stats.join(', ');
    if (this.GraduationYear) {
      out += ' // ';
      out += this.MasterYear ? this.MasterYear : this.GraduationYear;
    }
    return out;
  });
  Handlebars.registerHelper('website', function() {
    var href, title;
    href = this.Link || '#';
    title = this.Title || href;
    return '<a href="' + href + '">' + title + '</a>';
  });
  return Person;
});
