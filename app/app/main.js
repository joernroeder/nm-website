// Generated by CoffeeScript 1.6.2
require(['app', 'router', 'modules/Project', 'modules/Person', 'modules/Excursion', 'modules/Workshop', 'modules/Exhibition', 'modules/CalendarEntry'], function(app, Router, Project, Person, Excursion, Workshop, Exhibition, CalendarEntry) {
  app.Router = new Router();
  app.Layout;
  app.PageInfos = {};
  app.Collections = {};
  app.Config = {
    ProjectTypes: ['Project', 'Excursion', 'Workshop', 'Exhibition'],
    UrlSuffixes: {
      portfolio: '?search=IsPortfolio:1&context=view.portfolio_init',
      about_persons: '?search=IsExternal:0'
    },
    Featured: {
      present: false,
      domName: function(className) {
        return 'featured-' + className.toLowerCase();
      },
      urlSuffix: '?search=IsFeatured:1&context=view.portfolio_init'
    },
    Project: {
      portfolio_present: false
    },
    Excursion: {
      portfolio_present: false
    },
    Workshop: {
      portfolio_present: false
    },
    Exhibition: {
      portfolio_present: false
    },
    Person: {
      about_present: false
    }
  };
  $(function() {
    return JJRestApi.bootstrapWithStructure(function() {
      var buildCollections;

      buildCollections = function(names) {
        var CollClass, name, _i, _len, _results;

        _results = [];
        for (_i = 0, _len = names.length; _i < _len; _i++) {
          name = names[_i];
          CollClass = JJRestApi.Collection(name);
          _results.push(app.Collections[name] = new CollClass());
        }
        return _results;
      };
      buildCollections(app.Config.ProjectTypes.concat(['Person', 'CalendarEntry']));
      /*
      			app.Layout = app.useLayout 'main', 
      			views:
      				'': [
      					#new PageError.Views.FourOhFour()
      				]
      */

      return Backbone.history.start({
        pushState: true
      });
    });
  });
  return $(document).on('click', 'a:not([data-bypass])', function(evt) {
    var href, protocol;

    href = $(this).attr('href');
    protocol = this.protocol + '//';
    if (href && href.slice(0, protocol.length) !== protocol && href.indexOf('javascript:') !== 0) {
      evt.preventDefault();
      return Backbone.history.navigate(href, true);
    }
  });
});
