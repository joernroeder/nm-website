// Generated by CoffeeScript 1.6.3
"use strict";
var addEntity, box, hz, log, postState, ready, setDimensions, setScale;

importScripts('./Box2D.js');

importScripts('./RadialGravity.js');

hz = 30;

box = new RadialGravity(hz, false);

ready = false;

log = function(value) {
  return self.postMessage({
    key: 'log',
    log: value
  });
};

/*
 # passes dimensions to the worker
 #
 # @param int width
 # @param int height
*/


setDimensions = function(width, height) {
  return box.setDimensions(width, height);
};

addEntity = function(entity) {
  var pos;
  box.setBody(entity.id, entity);
  if (box.ready() && !ready) {
    postState();
    pos = box.getGravityPosition();
    return log(pos);
  }
};

postState = function(id) {
  var state, timing;
  timing = box.update();
  state = box.getState();
  if (state) {
    return self.postMessage({
      time: timing,
      bodiesState: state,
      id: id
    });
  }
};

setScale = function(val) {
  return box.setScale(val);
};

self.onmessage = function(e) {
  switch (e.data.key) {
    case 'addEntity':
      return addEntity(e.data.entity);
    case 'dimensions':
      return setDimensions(e.data.width, e.data.height);
    case 'req':
      return postState(e.data.id);
    case 'setscale':
      return setScale(e.data.value);
  }
};
