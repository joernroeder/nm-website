// Generated by CoffeeScript 1.6.2
"use strict";(function($) {
  var JJSimpleImagesUploadZone;

  JJSimpleImagesUploadZone = (function() {
    JJSimpleImagesUploadZone.prototype.fileMatch = 'image.*';

    JJSimpleImagesUploadZone.prototype.cache = null;

    JJSimpleImagesUploadZone.prototype.defaults = {
      url: null,
      errorMsg: 'Sorry, but there has been an error.',
      additionalData: null,
      responseHandler: function(data) {
        console.log('UPLOAD DATA');
        return console.log(data);
      }
    };

    JJSimpleImagesUploadZone.prototype.$dropzone = null;

    JJSimpleImagesUploadZone.prototype.maxAllowed = null;

    function JJSimpleImagesUploadZone(selector, opts) {
      this.options = $.extend({}, this.defaults, opts);
      this.$dropzone = selector instanceof jQuery ? selector : $(selector);
      this.dragAndDropSetup();
    }

    JJSimpleImagesUploadZone.prototype.cleanup = function() {
      return this.$dropzone.off('dragenter dragleave drop');
    };

    JJSimpleImagesUploadZone.prototype.dragAndDropSetup = function() {
      var $dropzone,
        _this = this;

      $dropzone = this.$dropzone;
      $dropzone.on('dragenter', function(e) {
        console.log('dragging into it');
        return $(this).addClass('dragactive');
      });
      $dropzone.on('dragleave drop', function(e) {
        return $(this).removeClass('dragactive');
      });
      return $dropzone.on('drop', function(e) {
        var uploadDfd;

        console.log('dropping');
        if (e.dataTransfer.files.length) {
          uploadDfd = JJFileUpload["do"](e, $dropzone, _this.options.url, _this.options.additionalData, _this.options.errorMsg, _this.fileMatch, _this.maxAllowed);
          return uploadDfd.done(function(data) {
            data = $.parseJSON(data);
            return _this.options.responseHandler(data);
          });
        }
      });
    };

    return JJSimpleImagesUploadZone;

  })();
  return window.JJSimpleImagesUploadZone = JJSimpleImagesUploadZone;
})(jQuery);
